generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model baby {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String           @db.VarChar(255)
  age             Int
  nap_times       Int?
  organization_id String           @db.Uuid
  created_at      DateTime         @default(now()) @db.Timestamp(6)
  updated_at      DateTime         @default(now()) @db.Timestamp(6)
  organization    organization     @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  report          report[]
  sleep_schedule  sleep_schedule[]
  sweetspot       sweetspot[]
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  baby        baby[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model report {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  daily_report   Int?
  weekly_report  Int?
  monthly_report Int?
  baby_id        String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  baby           baby     @relation(fields: [baby_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sleep_schedule {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time  DateTime @db.Timestamp(6)
  end_time    DateTime @db.Timestamp(6)
  sleep_hours Int?
  baby_id     String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  baby        baby     @relation(fields: [baby_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sweetspot {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  ideal_sleep_window     DateTime? @db.Timestamp(6)
  ideal_nap_time         DateTime? @db.Timestamp(6)
  ideal_night_sleep_time DateTime? @db.Timestamp(6)
  baby_id                String    @db.Uuid
  created_at             DateTime  @default(now()) @db.Timestamp(6)
  updated_at             DateTime  @default(now()) @db.Timestamp(6)
  baby                   baby      @relation(fields: [baby_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
}
